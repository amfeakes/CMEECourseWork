Starting code feedback for Amy, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 3.00 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: .git, week7, week3, week2, Feedback, miniproject, week1

Found the following files in parent directory: README.md, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:

**********************************************************************
##for files which we dont want to track - we ignore 
##with git ignore there is the option to whitelist or blacklist 
# can do via black listing, or whitelisting 
## whitelisting - ignore every file, then explicitly include the ones you want 
*~ 
# ignore every file 
*.*
#now through ! execption, include file types wanted 
!.gitignore
!*.R
!*.py
!*.sh
!*.tex
!*.bib
!*.md
!*.txt

#week1 edits 
!week1/code/*.txt
!week1/data/fasta/*

#week2 edits 
!week2/data/*.csv
!week2/data/*.fasta
!week2/data/testp.p

#week3 edits 
*.Rhistory
!week3/data/*
*week3/code/Rplots.pdf

#week7 edits
*week7/code/.ipynb_checkpoints
!week7/data/*
!week7/code/myfirstjupyternb.ipynb

#miniproject edits 
!miniproject/data/LogisticGrowthData.csv

#hpc edits

##always exculded 
.idea
*week4
*week5
*week6modelling


**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# My CMEE Coursework Repository
This repository contains all coursework materials, based on the [The Multilingual Quantitative Biologist](https://mhasoba.github.io/TheMulQuaBio/intro.html) online book. For the Computational Methods in Ecology and Evolution course, at Imperial College London, Silwood Park 22-23. 

## Group work 
The groupwork coursework is details within each week directory. Our groupwork repository can be found here [electric_emus](https://github.com/amfeakes/electric_emus.git).

## Contents 
The repositories for each week respectively 

### [Week 1](week1)

  * Unix and Linux introduction
  * Shell scripting
  * Version control with Git
  * Scientific documents with LATEX

### [Week 2](week2)

  * Biological computing in Python (I)

### [Week 3](week3)
  
  * Biological computing in R 
  * Data management and visualisation 

### [Week 7](week7)

  * Biological computing in Python (II)
  * Introduction to Juypter

### [miniproject](miniproject)

  * This repository contains the courserwork material for the CMEE miniproject

### [hpc](hpc)
  
  * This repository contains all the hand in scripts for the hpc week practicals, the .e .o and .rda files have been omitted. 

## Author 
Amy Feakes
amf222@ic.ac.uk

**********************************************************************

======================================================================
Looking for the weekly directories...

Found 4 weekly directories: week1, week2, week3, week7

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: code, sandbox, results, data

Found the following files: README.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# Week 1 Repository 

This contains all the coursework/practicals for week 1 of the CMEE course.

Specifically working on the first four topics in [The Multilingual Quantitative Biologist](https://mhasoba.github.io/TheMulQuaBio/intro.html) online book. 
1. [UNIX and Linux](https://mhasoba.github.io/TheMulQuaBio/notebooks/01-Unix.html)
2. [Shell scripting](https://mhasoba.github.io/TheMulQuaBio/notebooks/02-ShellScripting.html)
3. [Version control with Git](https://mhasoba.github.io/TheMulQuaBio/notebooks/03-Git.html)
4. [Scientific documents with LaTeX](https://mhasoba.github.io/TheMulQuaBio/notebooks/04-LaTeX.html)

## Installation 

If you wish to run the scripts within the repository - you should clone the repository

## Usage

### 1. UNIX and Linux

[unixprac1.txt](code/unixprac1.txt)

This file contains five commands (in UNIX shell), that analyse sequence data from FASTA files. Each line needs to be run separately to generate the output. 


### 2. Shell scripting 

[boilerplate.sh](code/boilerplate.sh)

This is a simple biolerplate for shell scripts, which prints 'This is a shell script!'.

[myexamplescript.sh](code/myexamplescript.sh)

This script demonstrates assiging values. 

[variable.sh](code/variable.sh)

This script illustrates different types of shell variables. Requiring only strings and numerical arguments. 

[tabtocsv.sh](code/tabtocsv.sh)

This script subsitutes the tabs in a file to commas. The output is saved in results as a .csv. 

[csvtospace.sh](code/csvtospace.sh)

This script uses a .csv file and converts it to a file which separetes the commans to spaces. It requires one file as the argument, and the output is placed in the results directory. 

[countlines.sh](code/countlines.sh)

This script counts the number of lines in a file, requiring one file as the argument. 

[tif2png.sh](code/tif2png.sh)

The script is to convert a .tif file to a .png file. 

[concatenatetwofiles.sh](code/concatenatetwofiles.sh)

This script concatenates the contents of two files, then places the output into the results directory. It requires two files to operate. 


### 3. Version control with Git

No code files were made in this section of the practical.


### 4. Scientific documents with LaTeX

[compilelatex.sh](code/compilelatex.sh)
This script combines LaTeX with Bibtex, it requires one LaTeX file to complete. The output is saved in the results directory and opened in preview (for Mac OS).

[firstbiblio.bib](code/firstbiblio.bib)
This is the BibTex reference for the LaTeX document firstexample.tex.

[firstexample.tex](code/firstexample.tex)
This is the LaTeX code to draft a simple document. 
**********************************************************************

Results directory is empty - good! 

Found 12 code files: tabtocsv.sh, countlines.sh, boilerplate.sh, unixprac1.txt, concatenatetwofiles.sh, csvtospace.sh, variable.sh, firstexample.tex, firstbiblio.bib, compilelatex.sh, tif2png.sh, myexamplescript.sh

======================================================================
Testing script/code files...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:

**********************************************************************
#!/bin/sh
#Author: Amy Feakes amy.feakes222@imperial.ac.uk
#Script: tabtocsv.sh
#Description substitue the tabs in the files with commas, saves the output into a .csv file
# Arguments: 1 -> tab delimited file 
# Date: Oct 2022

if [[ "$1" == *".txt"* ]] ;
    then
        echo "Creating a comma delimited version of $1 ..."
        sed 's/ /,/g' $1 >> ../results/`basename -s .txt $1`.csv
        echo "Done!!"
    else 
        echo "Input places is not .txt"
fi

**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 


**********************************************************************
Input places is not .txt

**********************************************************************

Code ran without errors

Time consumed = 0.00225s

======================================================================
Inspecting script file countlines.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Author: Amy Feakes amy.feakes222@imperial.ac.uk
#Script: countlines.sh
#Desc: count the number of lines in a file 
#Arguments: 1 - file with lines  
#Date: Oct 2022

echo "Counting number of lines in $1"

#check the input 
if [ -z "$1" ]
then    
    echo "Please enter file"
    exit    
fi

#count the number of lines 
NumLines=`wc -l < $1`
echo "The file $1 has$NumLines lines"
exit
**********************************************************************

Testing countlines.sh...

Output (only first 500 characters): 


**********************************************************************
Counting number of lines in 
Please enter file

**********************************************************************

Code ran without errors

Time consumed = 0.00253s

======================================================================
Inspecting script file boilerplate.sh...

File contents are:

**********************************************************************
#!bin/sh
#Author: Amy Feakes amy.feakes222@imperial.ac.uk
#Script: boilerplate.sh
#Desc: simple biolerplate for shell scripts
#Arguments: none
#Date: Oct 2022

echo -e "\nThis is a shell script! \n"

# echo prints the command line arguememtn 
# -e enables interpretation of the backslach
    #without -e the line would read \nThis is a shell script! \n in output
#exit




**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 


**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00344s

======================================================================
Inspecting script file unixprac1.txt...

File contents are:

**********************************************************************
# 1 count lines within files
 ## issue is it also has the total (need to work out how to remove)
wc -l data/fasta/*.fasta
# 2 print everything from the second line from ecolifasta.
cat data/fasta/ecoli.fasta | tail -n+2
# 3 count the sequence length of this genome 
cat data/fasta/ecoli.fasta | tail -n+2 | wc -m
# 4 count matches of "ATGC"
cat data/fasta/ecoli.fasta |tail -n+2 |tr -d "\n" | grep -i -o ATGC | wc -l
# 5 compute the AT/GC ratio 
## currently the number is very wrong 
echo `cat data/fasta/ecoli.fasta |tail -n+2 |tr -d "\n" | grep -i -o 'A\|T' | wc -l` / `cat data/fasta/ecoli.fasta |tail -n+2 |tr -d "\n" | grep -i -o 'G\|C' | wc -l`



**********************************************************************

Testing unixprac1.txt...

======================================================================
Inspecting script file concatenatetwofiles.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Author: Amy Feakes amy.feakes222@imperial.ac.uk
#Script: concatenatetwofiles.sh
#Desc: combining two files into one file
#Arguments: 2 - two files to merge
#Date: Oct 2022

#check for valid inputs, if not then print error 

if [ -z "$1" ] || [ -z "$2" ]
then    
    echo "Error. Please enter two file names"
    exit 
fi

#then, if two files are provided, concatonte 

cat $1 > mergedfile.txt
cat $2 >> mergedfile.txt

#save this file in results 
mv mergedfile.txt  ../results/$3

# feedback 
    echo "Merged file is saved in results as mergedfile"

#if you want to show merged file 
    # cat ../results/merged

**********************************************************************

Testing concatenatetwofiles.sh...

Output (only first 500 characters): 


**********************************************************************
Error. Please enter two file names

**********************************************************************

Code ran without errors

Time consumed = 0.00434s

======================================================================
Inspecting script file csvtospace.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Author: Amy Feakes amy.feakes222@imperial.ac.uk
#Script: csvtospace.sh
#Description substitue the commas in the files with spaces, saves the output into a .txt file
# Arguments: 1 -> tab delimited file 
# Date: Oct 2022

if [[ "$1" == *".csv"* ]] ;
    then
        echo "Creating a tab delimited version of $1"
        sed 's/,/ /g' $1 >> ../results/`basename -s .csv $1`.txt   
        echo "Done!!"
    else   
        echo "Input not in .csv format"
fi


**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 


**********************************************************************
Input not in .csv format

**********************************************************************

Code ran without errors

Time consumed = 0.00275s

======================================================================
Inspecting script file variable.sh...

File contents are:

**********************************************************************
#!/bin/sh
#Author: Amy Feakes amy.feakes222@imperial.ac.uk
#Script: variable.sh
#Desc: illustrates the use of variables 
#Arguments: none
#Date: Oct 2022

# Special variables

echo "This script was called with $# parameters"
echo "The script's name is $0"
echo "The arguments are $@"
echo "The first argument is $1"
echo "The second argument is $2"

# Assigned Variables; Explicit declaration:
MY_VAR='some string'
echo 'the current value of the variable is:' $MY_VAR 
echo
echo 'Please enter a new string'
read MY_VAR
echo
echo 'the current value of the variable is:' $MY_VAR
echo

## Assigned Variables; Reading (multiple values) from user input: 
echo 'Enter two numbers separated by space(s)'
read a b 
echo 
echo 'you entered' $a 'and' $b '; Their sum is:'

## Assigned Variables; Command subsitution 
MY_SUM=$(expr $a + $b)
echo $MY_SUM

**********************************************************************

Testing variable.sh...

Output (only first 500 characters): 


**********************************************************************
This script was called with 0 parameters
The script's name is variable.sh
The arguments are 
The first argument is 
The second argument is 
the current value of the variable is: some string

Please enter a new string

the current value of the variable is:

Enter two numbers separated by space(s)

you entered and ; Their sum is:


**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

expr: syntax error: missing argument after ‘+’

======================================================================
Inspecting script file firstexample.tex...

File contents are:

**********************************************************************
\documentclass [12pt]{article}

\title{A Simple Document}

\author{Amy Feakes}

% \date

\begin{document}
    \maketitle

    \begin{abstract}
        This paper analyzes a seminal equation in population biology.
    \end{abstract}

    \section{Introduction}
        Blah Blah
    \section{Materials \& Methods}

    A foundational equation of population biology is:

    \begin{equation}
        \frac{dN}{dt} = r N (1 - \frac{N}{K} )
    \end{equation}

    It was first proposed by Verhulst in 1838 \cite{verhulst1838notice}.

    \bibliographystyle{plain}

    \bibliography{firstbiblio}

\end{document}

**********************************************************************

Testing firstexample.tex...

======================================================================
Inspecting script file firstbiblio.bib...

File contents are:

**********************************************************************
#bib reference for first example using latex 
@article{verhulst1838notice,
  title={Notice sur la loi que la population suit dans son accroissement},
  author={Verhulst, Pierre-Fran{\c{c}}ois},
  journal={Corresp. Math. Phys.},
  volume={10},
  pages={113--126},
  year={1838}
}
**********************************************************************

Testing firstbiblio.bib...

======================================================================
Inspecting script file compilelatex.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Author: Amy Feakes amy.feakes222@imperial.ac.uk
#Script: compilelatex.sh
#Desc: shell script to compile .tex with .bib and clean up and provide a single .pdf
#Arguments:  1 - .tex file 
#Date: Oct 2022


#removing the .tex file extension
NAME=`basename -s .tex $1` 

#check that the input is valid 
if [ -z "$NAME" ]
then 
    echo "Input a .tex file"
    exit 0
fi

#compiling the file
 echo "Compiling .pdf, including bibliography"
    pdflatex $NAME
    bibtex $NAME
    pdflatex $NAME
    pdflatex $NAME
   
# moving the output 
 mv $NAME.pdf ../results

 #this line of code is limited to mac
 open -a "Preview" ../results/$NAME.pdf &

## Cleanup
   # [ -e *.aux ] && rm *.aux
    #[ -e *.log ] && rm *.log
    #[ -e *.bbl ] && rm *.bbl
    #[ -e *.blg ] && rm *.blg

# clean up 
    rm *.aux
    rm *.log
    rm *.bbl
    rm *.blg
    
exit

#still one issue Transcript written on firstexample.log. ? 
**********************************************************************

Testing compilelatex.sh...

Output (only first 500 characters): 


**********************************************************************
Input a .tex file

**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

basename: missing operand
Try 'basename --help' for more information.

======================================================================
Inspecting script file tif2png.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Author: Amy Feakes amy.feakes222@imperial.ac.uk
#Script: tif2png.sh
#Desc: convert a .tif to .png
#Arguments:  1 - .tif file 
#Date: Oct 2022

#check correct file has been provided 
if [[ $1 == *.tif ]]

#convert the file, then move the file to results, under .png
then 
        echo "Converting $1"
        convert "$1" "$(basename "$1" .tif).png" 
        echo "File converted and placed in results "
        mv "$(basename "$1" .tif).png"  ../results

#if incorrect file extension has been provided, print message asking for correct file 
else
    echo "Please enter a .tif file"
    exit
fi
**********************************************************************

Testing tif2png.sh...

Output (only first 500 characters): 


**********************************************************************
Please enter a .tif file

**********************************************************************

Code ran without errors

Time consumed = 0.00340s

======================================================================
Inspecting script file myexamplescript.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Author: Amy Feakes amy.feakes222@imperial.ac.uk
#Script: myexamplescrip.sh
#Desc: simple printing script
#Arguments: none
#Date: Oct 2022

MSG1="Hello"
MSG2=$user
echo "$MSG1 $MSG2"
echo "Hello $USER"
echo
**********************************************************************

Testing myexamplescript.sh...

Output (only first 500 characters): 


**********************************************************************
Hello 
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00264s

======================================================================
======================================================================
Finished running scripts

Ran into 2 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 100

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!